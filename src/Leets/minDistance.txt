import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



class Result {

    /*
     * Complete the 'findMinDistance' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER w
     *  2. INTEGER h
     *  3. INTEGER n
     */

    public static int findMinDistance(int w, int h, int n) {
    // Write your code here
        int[][] grid = new int[w][h];
        grid[w-1][h-1] = 1;
        for(int i = h-1 ; i >= 0 ; i--){
            for (int j = w ; j >= 0 ; j--){
                if( i+1 < h && j+1 < w && i-1 >= 0 && j -1 >= 0){
                if(grid[i][j] == 0){
                    grid[i][j-1] = 1;
                    grid[i][j+1] = 1;
                    grid[i-1][j] = 1;
                    grid[i+1][j] = 1;
                }
                }
            }
        }
    }

}

public class Solution {